name: gocardless/gocardless-nodejs/deploy_library
on:
  push:
    branches:
    - master
env:
  NPM_AUTH_TOKEN: xxxxUYtX
jobs:
  test_library:
    defaults:
      run:
        working-directory: "/built-library"
    runs-on: ubuntu-latest
    container:
      image: node:10
    steps:
    - uses: actions/checkout@v3.3.0
    - run: npm install --save-dev jest typescript ts-jest @types/jest
    - run: npm test
  transpile_library:
    defaults:
      run:
        working-directory: "/built-library"
    runs-on: ubuntu-latest
    container:
      image: node:10
    needs:
    - test_library
    env:
      OUT_DIR: "/built-library"
      DIST_FOLDER: "/built-library/dist"
    steps:
    - uses: actions/checkout@v3.3.0
    - run: npm install
    - run: npm install -g typescript
    - run: tsc -p .
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/built-library/*"
  publish_to_npm:
    if: github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: "/built-library"
    runs-on: ubuntu-latest
    container:
      image: node:10
    needs:
    - transpile_library
    env:
      OUT_DIR: "/built-library"
      DIST_FOLDER: "/built-library/dist"
    steps:
    - uses: actions/checkout@v3.3.0
    - uses: actions/download-artifact@v3.0.1
      with:
        path: "/built-library"
    - run: cp package.json $DIST_FOLDER
    - run: cp README.md $DIST_FOLDER
    - run: npm install
    - name: Authenticate w/NPM.
      run: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > .npmrc
    - name: Publish the library.
      run: npm publish $DIST_FOLDER
